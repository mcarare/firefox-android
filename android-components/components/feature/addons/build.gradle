/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'

apply plugin: 'com.google.devtools.ksp'

android {
    defaultConfig {
        minSdkVersion config.minSdkVersion
        compileSdk config.compileSdkVersion
        targetSdkVersion config.targetSdkVersion

        ksp {
            arg("room.schemaLocation", "$projectDir/schemas".toString())
        }

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.incremental": "true"]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt')
        }
    }

    lint {
        warningsAsErrors true
        abortOnError true
    }

    buildFeatures {
        viewBinding true
    }

    namespace 'mozilla.components.feature.addons'
}

tasks.withType(KotlinCompile).configureEach {
    kotlinOptions.freeCompilerArgs += "-opt-in=kotlinx.coroutines.ExperimentalCoroutinesApi"
}

dependencies {
    implementation libs.kotlinx.coroutines.android

    implementation libs.androidx.appcompat
    implementation libs.androidx.cardview
    implementation libs.androidx.core.ktx
    implementation libs.androidx.recyclerview
    implementation libs.androidx.work.runtime.ktx

    implementation libs.androidx.room.ktx
    ksp libs.androidx.room.compiler

    implementation project(':ui-colors')
    implementation project(':ui-icons')
    implementation project(':ui-widgets')
    implementation project(':browser-state')
    implementation project(':concept-engine')
    implementation project(':concept-fetch')
    implementation project(':concept-menu')
    implementation project(':support-base')
    implementation project(':support-ktx')
    implementation project(':support-webextensions')
    implementation project(':support-utils')

    testImplementation project(':support-test')
    testImplementation project(':support-test-libstate')
    testImplementation libs.androidx.test.core
    testImplementation libs.androidx.test.junit.ktx
    testImplementation libs.robolectric
    testImplementation libs.androidx.work.testing
    testImplementation libs.kotlinx.coroutines.test
}

apply from: '../../../android-lint.gradle'
apply from: '../../../publish.gradle'
ext.configurePublish(config.componentsGroupId, archivesBaseName, project.ext.description)
